{"remainingRequest":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuanchenyu/Downloads/vue-login-demo-master/src/views/register/Register.vue?vue&type=style&index=0&id=09939685&scoped=true&lang=css&","dependencies":[{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/src/views/register/Register.vue","mtime":1658465655674},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyog6K6+572u55m75b2V6Z2i5p2/5bGF5Lit77yM5a695bqm5Li6NDAwcHggKi8KLmJveC1jYXJkIHsKICBtYXJnaW46IGF1dG8gYXV0bzsKICB3aWR0aDogNDAwcHg7Cn0KLyog6K6+572u55m75b2V6Z2i5p2/5Lit55qE6KGo5Y2V5bGF5LitICovCi5sb2dpbi1mcm9tIHsKICBtYXJnaW46IGF1dG8gYXV0bzsKfQo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views/register","sourcesContent":["<template>\n  <div>\n    <el-card class=\"box-card\">\n      <h2>注册</h2>\n      <el-form\n        :model=\"ruleForm\"\n        status-icon\n        :rules=\"rules\"\n        ref=\"ruleForm\"\n        label-position=\"left\"\n        label-width=\"80px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"手机号\" prop=\"phoneNum\" ref = \"phoneNum\" :rules=\"[\n          { required: true, message: '手机号不能为空！', trigger: 'blur' },\n          { min: 11, max: 11, message: '手机号长度错误', trigger: 'blur' },\n          {\n            pattern: /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$/,\n            message: '请输入正确的手机号码'\n          }\n        ]\">\n          <el-input v-model=\"ruleForm.phoneNum\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"kaptcha\">\n          <el-input\n            v-model=\"ruleForm.kaptcha\" type=\"text\" >\n          <el-button slot=\"append\"  @click=\"getKaptcha('phoneNum')\">获取验证码</el-button>\n          </el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"确认密码\" prop=\"password\">\n          <el-input\n            type=\"password\"\n            v-model=\"ruleForm.password\"\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item> -->\n        <el-form-item v-if=\"false\" prop=\"serialNum\" label=\"序列号\"> \n          <el-input type=\"hidden\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"btnGroup\">\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"  v-loading=\"loading\"\n          >提交</el-button\n        >\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n        <el-button @click=\"goBack\">返回</el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        if (this.ruleForm.checkPass !== \"\") {\n          this.$refs.ruleForm.validateField(\"checkPass\");\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        phoneNum: \"\",\n        kaptcha: \"\",\n      },\n      rules: {\n        phoneNum: [\n          { required: true, message: \"手机号不能为空！\", trigger: \"blur\" },\n          { min: 11, max: 11, message: '手机号长度错误', trigger: 'blur' },\n          {\n            pattern: /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$/,\n            message: '请输入正确的手机号码'\n          }\n        ],\n        kaptcha: [\n          { required: true,message:\"验证码不能为空\", trigger: \"blur\" },\n          { min: 6,max: 6, message:'验证码格式错误',trigger: \"blur\" },\n        ],\n        // password: [\n        //   { required: true, validator: validatePass2, trigger: \"blur\" },\n        // ],\n      },\n      loading: false\n    };\n  },\n  methods: {\n    getKaptcha(phoneNum) {\n      console.log('在')\n      this.$refs[phoneNum].validate((valid) => {\n        this.loading = true;  // 提交按钮显示加载动画\n        console.log(valid)\n        if(valid) {\n          let _this = this;\n          this.axios({     // axios 向后端发起请求\n            url: \"/api/user/phone/kaptcha\",  // 请求地址\n            method: \"post\",             // 请求方法\n            headers: {                  // 请求头\n              \"Content-Type\": \"application/json\",\n            },\n            data: { // 请求参数，为 data，与登录的 params 不太一样\n              phoneNum: _this.ruleForm.phoneNum,\n              SmsType: \"REGISTER_TYPE\",\n            },\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\n            if (res.code === '200') {  // 当响应的编码为 0 时，说明注册成功\n              // 显示后端响应的成功信息\n              // this.$message({\n              //   message: res.data.msg,\n              //   type: \"success\",\n              // });\n              alert(\"获取验证码成功\")\n            }else{  // 当响应的编码不为 0 时，说明注册失败\n              // 显示后端响应的失败信息\n              this.$message({\n                message: res.message,\n                type: \"warning\",\n              });\n            }\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\n            _this.loading = false;\n            console.log(res);\n        });\n      }\n    });\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        this.loading = true;  // 提交按钮显示加载动画\n        if (valid) {\n          let _this = this;\n          this.axios({     // axios 向后端发起请求\n            url: \"/api/user/register\",  // 请求地址\n            method: \"post\",             // 请求方法\n            headers: {                  // 请求头\n              \"Content-Type\": \"application/json\",\n            },\n            data: { // 请求参数，为 data，与登录的 params 不太一样\n              uname: _this.ruleForm.uname,\n              password: _this.ruleForm.password,\n            },\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\n            if (res.data.code === '0') {  // 当响应的编码为 0 时，说明注册成功\n              // 显示后端响应的成功信息\n              this.$message({\n                message: res.data.msg,\n                type: \"success\",\n              });\n            }else{  // 当响应的编码不为 0 时，说明注册失败\n              // 显示后端响应的失败信息\n              this.$message({\n                message: res.data.msg,\n                type: \"warning\",\n              });\n            }\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\n            _this.loading = false;\n            console.log(res);\n          });\n        } else { // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\n          console.log(\"error submit!!\");\n          this.loading = false;\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 设置登录面板居中，宽度为400px */\n.box-card {\n  margin: auto auto;\n  width: 400px;\n}\n/* 设置登录面板中的表单居中 */\n.login-from {\n  margin: auto auto;\n}\n</style>"]}]}