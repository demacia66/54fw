{"remainingRequest":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/babel-loader/lib/index.js!/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yuanchenyu/Downloads/vue-login-demo-master/src/views/register/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/src/views/register/Register.vue","mtime":1658465655674},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/babel.config.js","mtime":1644075760000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuanchenyu/Downloads/vue-login-demo-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHZhciB2YWxpZGF0ZVBhc3MgPSBmdW5jdGlvbiB2YWxpZGF0ZVBhc3MocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmICh2YWx1ZSA9PT0gIiIpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoIuivt+i+k+WFpeWvhueggSIpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoX3RoaXMyLnJ1bGVGb3JtLmNoZWNrUGFzcyAhPT0gIiIpIHsKICAgICAgICAgIF90aGlzMi4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZUZpZWxkKCJjaGVja1Bhc3MiKTsKICAgICAgICB9CgogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH07CgogICAgdmFyIHZhbGlkYXRlUGFzczIgPSBmdW5jdGlvbiB2YWxpZGF0ZVBhc3MyKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAodmFsdWUgPT09ICIiKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLor7flho3mrKHovpPlhaXlr4bnoIEiKSk7CiAgICAgIH0gZWxzZSBpZiAodmFsdWUgIT09IF90aGlzMi5ydWxlRm9ybS5wYXNzKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCLkuKTmrKHovpPlhaXlr4bnoIHkuI3kuIDoh7QhIikpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgcnVsZUZvcm06IHsKICAgICAgICBwaG9uZU51bTogIiIsCiAgICAgICAga2FwdGNoYTogIiIKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICBwaG9uZU51bTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogIuaJi+acuuWPt+S4jeiDveS4uuepuu+8gSIsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDExLAogICAgICAgICAgbWF4OiAxMSwKICAgICAgICAgIG1lc3NhZ2U6ICfmiYvmnLrlj7fplb/luqbplJnor68nLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwgewogICAgICAgICAgcGF0dGVybjogL14oMTNbMC05XXwxNFs1NzldfDE1WzAtMyw1LTldfDE2WzZdfDE3WzAxMzU2NzhdfDE4WzAtOV18MTlbODldKVxkezh9JC8sCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5q2j56Gu55qE5omL5py65Y+356CBJwogICAgICAgIH1dLAogICAgICAgIGthcHRjaGE6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICLpqozor4HnoIHkuI3og73kuLrnqboiLAogICAgICAgICAgdHJpZ2dlcjogImJsdXIiCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiA2LAogICAgICAgICAgbWF4OiA2LAogICAgICAgICAgbWVzc2FnZTogJ+mqjOivgeeggeagvOW8j+mUmeivrycsCiAgICAgICAgICB0cmlnZ2VyOiAiYmx1ciIKICAgICAgICB9XSAvLyBwYXNzd29yZDogWwogICAgICAgIC8vICAgeyByZXF1aXJlZDogdHJ1ZSwgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MyLCB0cmlnZ2VyOiAiYmx1ciIgfSwKICAgICAgICAvLyBdLAoKICAgICAgfSwKICAgICAgbG9hZGluZzogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRLYXB0Y2hhOiBmdW5jdGlvbiBnZXRLYXB0Y2hhKHBob25lTnVtKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coJ+WcqCcpOwogICAgICB0aGlzLiRyZWZzW3Bob25lTnVtXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBfdGhpczMubG9hZGluZyA9IHRydWU7IC8vIOaPkOS6pOaMiemSruaYvuekuuWKoOi9veWKqOeUuwoKICAgICAgICBjb25zb2xlLmxvZyh2YWxpZCk7CgogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdmFyIF90aGlzID0gX3RoaXMzOwoKICAgICAgICAgIF90aGlzMy5heGlvcyh7CiAgICAgICAgICAgIC8vIGF4aW9zIOWQkeWQjuerr+WPkei1t+ivt+axggogICAgICAgICAgICB1cmw6ICIvYXBpL3VzZXIvcGhvbmUva2FwdGNoYSIsCiAgICAgICAgICAgIC8vIOivt+axguWcsOWdgAogICAgICAgICAgICBtZXRob2Q6ICJwb3N0IiwKICAgICAgICAgICAgLy8g6K+35rGC5pa55rOVCiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAvLyDor7fmsYLlpLQKICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAvLyDor7fmsYLlj4LmlbDvvIzkuLogZGF0Ye+8jOS4jueZu+W9leeahCBwYXJhbXMg5LiN5aSq5LiA5qC3CiAgICAgICAgICAgICAgcGhvbmVOdW06IF90aGlzLnJ1bGVGb3JtLnBob25lTnVtLAogICAgICAgICAgICAgIFNtc1R5cGU6ICJSRUdJU1RFUl9UWVBFIgogICAgICAgICAgICB9CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgLy8g5b2T5pS25Yiw5ZCO56uv55qE5ZON5bqU5pe25omn6KGM6K+l5ous5Y+35YaF55qE5Luj56CB77yMcmVzIOS4uuWTjeW6lOS/oeaBr++8jOS5n+WwseaYr+WQjuerr+i/lOWbnueahOS/oeaBrwogICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcyMDAnKSB7CiAgICAgICAgICAgICAgLy8g5b2T5ZON5bqU55qE57yW56CB5Li6IDAg5pe277yM6K+05piO5rOo5YaM5oiQ5YqfCiAgICAgICAgICAgICAgLy8g5pi+56S65ZCO56uv5ZON5bqU55qE5oiQ5Yqf5L+h5oGvCiAgICAgICAgICAgICAgLy8gdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgLy8gICBtZXNzYWdlOiByZXMuZGF0YS5tc2csCiAgICAgICAgICAgICAgLy8gICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgLy8gfSk7CiAgICAgICAgICAgICAgYWxlcnQoIuiOt+WPlumqjOivgeeggeaIkOWKnyIpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIOW9k+WTjeW6lOeahOe8lueggeS4jeS4uiAwIOaXtu+8jOivtOaYjuazqOWGjOWksei0pQogICAgICAgICAgICAgIC8vIOaYvuekuuWQjuerr+WTjeW6lOeahOWksei0peS/oeaBrwogICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXMubWVzc2FnZSwKICAgICAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IC8vIOS4jeeuoeWTjeW6lOaIkOWKn+i/mOaYr+Wksei0pe+8jOaUtuWIsOWQjuerr+WTjeW6lOeahOa2iOaBr+WQjuWwseS4jeWGjeiuqeeZu+W9leaMiemSruaYvuekuuWKoOi9veWKqOeUu+S6hgoKCiAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShmb3JtTmFtZSkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIF90aGlzNC5sb2FkaW5nID0gdHJ1ZTsgLy8g5o+Q5Lqk5oyJ6ZKu5pi+56S65Yqg6L295Yqo55S7CgogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdmFyIF90aGlzID0gX3RoaXM0OwoKICAgICAgICAgIF90aGlzNC5heGlvcyh7CiAgICAgICAgICAgIC8vIGF4aW9zIOWQkeWQjuerr+WPkei1t+ivt+axggogICAgICAgICAgICB1cmw6ICIvYXBpL3VzZXIvcmVnaXN0ZXIiLAogICAgICAgICAgICAvLyDor7fmsYLlnLDlnYAKICAgICAgICAgICAgbWV0aG9kOiAicG9zdCIsCiAgICAgICAgICAgIC8vIOivt+axguaWueazlQogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgLy8g6K+35rGC5aS0CiAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgLy8g6K+35rGC5Y+C5pWw77yM5Li6IGRhdGHvvIzkuI7nmbvlvZXnmoQgcGFyYW1zIOS4jeWkquS4gOagtwogICAgICAgICAgICAgIHVuYW1lOiBfdGhpcy5ydWxlRm9ybS51bmFtZSwKICAgICAgICAgICAgICBwYXNzd29yZDogX3RoaXMucnVsZUZvcm0ucGFzc3dvcmQKICAgICAgICAgICAgfQogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIC8vIOW9k+aUtuWIsOWQjuerr+eahOWTjeW6lOaXtuaJp+ihjOivpeaLrOWPt+WGheeahOS7o+egge+8jHJlcyDkuLrlk43lupTkv6Hmga/vvIzkuZ/lsLHmmK/lkI7nq6/ov5Tlm57nmoTkv6Hmga8KICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09ICcwJykgewogICAgICAgICAgICAgIC8vIOW9k+WTjeW6lOeahOe8lueggeS4uiAwIOaXtu+8jOivtOaYjuazqOWGjOaIkOWKnwogICAgICAgICAgICAgIC8vIOaYvuekuuWQjuerr+WTjeW6lOeahOaIkOWKn+S/oeaBrwogICAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXMuZGF0YS5tc2csCiAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyDlvZPlk43lupTnmoTnvJbnoIHkuI3kuLogMCDml7bvvIzor7TmmI7ms6jlhozlpLHotKUKICAgICAgICAgICAgICAvLyDmmL7npLrlkI7nq6/lk43lupTnmoTlpLHotKXkv6Hmga8KICAgICAgICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLmRhdGEubXNnLAogICAgICAgICAgICAgICAgdHlwZTogIndhcm5pbmciCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gLy8g5LiN566h5ZON5bqU5oiQ5Yqf6L+Y5piv5aSx6LSl77yM5pS25Yiw5ZCO56uv5ZON5bqU55qE5raI5oGv5ZCO5bCx5LiN5YaN6K6p55m75b2V5oyJ6ZKu5pi+56S65Yqg6L295Yqo55S75LqGCgoKICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOWmguaenOi0puWPt+aIluWvhueggeacieS4gOS4quayoeWhq++8jOWwseebtOaOpeaPkOekuuW/heWhq++8jOS4jeWQkeWQjuerr+ivt+axggogICAgICAgICAgY29uc29sZS5sb2coImVycm9yIHN1Ym1pdCEhIik7CiAgICAgICAgICBfdGhpczQubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgcmVzZXRGb3JtOiBmdW5jdGlvbiByZXNldEZvcm0oZm9ybU5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0ucmVzZXRGaWVsZHMoKTsKICAgIH0sCiAgICBnb0JhY2s6IGZ1bmN0aW9uIGdvQmFjaygpIHsKICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACAA,MADA,kBACA;AAAA;;AACA;AACA;AACAC;AACA,OAFA,MAEA;AACA;AACA;AACA;;AACAA;AACA;AACA,KATA;;AAUA;AACA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;AACA,KARA;;AASA;AACAC;AACAC,oBADA;AAEAC;AAFA,OADA;AAKAC;AACAF,mBACA;AAAAG;AAAAC;AAAAC;AAAA,SADA,EAEA;AAAAC;AAAAC;AAAAH;AAAAC;AAAA,SAFA,EAGA;AACAG,0FADA;AAEAJ;AAFA,SAHA,CADA;AASAH,kBACA;AAAAE;AAAAC;AAAAC;AAAA,SADA,EAEA;AAAAC;AAAAC;AAAAH;AAAAC;AAAA,SAFA,CATA,CAaA;AACA;AACA;;AAfA,OALA;AAsBAI;AAtBA;AAwBA,GA7CA;AA8CAC;AACAC,cADA,sBACAX,QADA,EACA;AAAA;;AACAY;AACA;AACA,8BADA,CACA;;AACAA;;AACA;AACA;;AACA;AAAA;AACAC,0CADA;AACA;AACAC,0BAFA;AAEA;AACAC;AAAA;AACA;AADA,aAHA;AAMAlB;AAAA;AACAG,+CADA;AAEAgB;AAFA;AANA,aAUAC,IAVA,CAUA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACAC;AACA,aAPA,MAOA;AAAA;AACA;AACA;AACAd,oCADA;AAEAe;AAFA;AAIA,aAdA,CAeA;;;AACAC;AACAR;AACA,WA5BA;AA6BA;AACA,OAnCA;AAoCA,KAvCA;AAwCAS,cAxCA,sBAwCAC,QAxCA,EAwCA;AAAA;;AACA;AACA,8BADA,CACA;;AACA;AACA;;AACA;AAAA;AACAT,qCADA;AACA;AACAC,0BAFA;AAEA;AACAC;AAAA;AACA;AADA,aAHA;AAMAlB;AAAA;AACA0B,yCADA;AAEAC;AAFA;AANA,aAUAP,IAVA,CAUA;AAAA;AACA;AAAA;AACA;AACA;AACAb,qCADA;AAEAe;AAFA;AAIA,aANA,MAMA;AAAA;AACA;AACA;AACAf,qCADA;AAEAe;AAFA;AAIA,aAbA,CAcA;;;AACAC;AACAR;AACA,WA3BA;AA4BA,SA9BA,MA8BA;AAAA;AACAA;AACA;AACA;AACA;AACA,OArCA;AAsCA,KA/EA;AAgFAa,aAhFA,qBAgFAH,QAhFA,EAgFA;AACA;AACA,KAlFA;AAmFAI,UAnFA,oBAmFA;AACA;AACA;AArFA;AA9CA","names":["data","callback","ruleForm","phoneNum","kaptcha","rules","required","message","trigger","min","max","pattern","loading","methods","getKaptcha","console","url","method","headers","SmsType","then","alert","type","_this","submitForm","formName","uname","password","resetForm","goBack"],"sources":["Register.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card class=\"box-card\">\n      <h2>注册</h2>\n      <el-form\n        :model=\"ruleForm\"\n        status-icon\n        :rules=\"rules\"\n        ref=\"ruleForm\"\n        label-position=\"left\"\n        label-width=\"80px\"\n        class=\"demo-ruleForm\"\n      >\n        <el-form-item label=\"手机号\" prop=\"phoneNum\" ref = \"phoneNum\" :rules=\"[\n          { required: true, message: '手机号不能为空！', trigger: 'blur' },\n          { min: 11, max: 11, message: '手机号长度错误', trigger: 'blur' },\n          {\n            pattern: /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$/,\n            message: '请输入正确的手机号码'\n          }\n        ]\">\n          <el-input v-model=\"ruleForm.phoneNum\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"kaptcha\">\n          <el-input\n            v-model=\"ruleForm.kaptcha\" type=\"text\" >\n          <el-button slot=\"append\"  @click=\"getKaptcha('phoneNum')\">获取验证码</el-button>\n          </el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"确认密码\" prop=\"password\">\n          <el-input\n            type=\"password\"\n            v-model=\"ruleForm.password\"\n            autocomplete=\"off\"\n          ></el-input>\n        </el-form-item> -->\n        <el-form-item v-if=\"false\" prop=\"serialNum\" label=\"序列号\"> \n          <el-input type=\"hidden\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"btnGroup\">\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"  v-loading=\"loading\"\n          >提交</el-button\n        >\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n        <el-button @click=\"goBack\">返回</el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        if (this.ruleForm.checkPass !== \"\") {\n          this.$refs.ruleForm.validateField(\"checkPass\");\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        phoneNum: \"\",\n        kaptcha: \"\",\n      },\n      rules: {\n        phoneNum: [\n          { required: true, message: \"手机号不能为空！\", trigger: \"blur\" },\n          { min: 11, max: 11, message: '手机号长度错误', trigger: 'blur' },\n          {\n            pattern: /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$/,\n            message: '请输入正确的手机号码'\n          }\n        ],\n        kaptcha: [\n          { required: true,message:\"验证码不能为空\", trigger: \"blur\" },\n          { min: 6,max: 6, message:'验证码格式错误',trigger: \"blur\" },\n        ],\n        // password: [\n        //   { required: true, validator: validatePass2, trigger: \"blur\" },\n        // ],\n      },\n      loading: false\n    };\n  },\n  methods: {\n    getKaptcha(phoneNum) {\n      console.log('在')\n      this.$refs[phoneNum].validate((valid) => {\n        this.loading = true;  // 提交按钮显示加载动画\n        console.log(valid)\n        if(valid) {\n          let _this = this;\n          this.axios({     // axios 向后端发起请求\n            url: \"/api/user/phone/kaptcha\",  // 请求地址\n            method: \"post\",             // 请求方法\n            headers: {                  // 请求头\n              \"Content-Type\": \"application/json\",\n            },\n            data: { // 请求参数，为 data，与登录的 params 不太一样\n              phoneNum: _this.ruleForm.phoneNum,\n              SmsType: \"REGISTER_TYPE\",\n            },\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\n            if (res.code === '200') {  // 当响应的编码为 0 时，说明注册成功\n              // 显示后端响应的成功信息\n              // this.$message({\n              //   message: res.data.msg,\n              //   type: \"success\",\n              // });\n              alert(\"获取验证码成功\")\n            }else{  // 当响应的编码不为 0 时，说明注册失败\n              // 显示后端响应的失败信息\n              this.$message({\n                message: res.message,\n                type: \"warning\",\n              });\n            }\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\n            _this.loading = false;\n            console.log(res);\n        });\n      }\n    });\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        this.loading = true;  // 提交按钮显示加载动画\n        if (valid) {\n          let _this = this;\n          this.axios({     // axios 向后端发起请求\n            url: \"/api/user/register\",  // 请求地址\n            method: \"post\",             // 请求方法\n            headers: {                  // 请求头\n              \"Content-Type\": \"application/json\",\n            },\n            data: { // 请求参数，为 data，与登录的 params 不太一样\n              uname: _this.ruleForm.uname,\n              password: _this.ruleForm.password,\n            },\n          }).then((res) => { // 当收到后端的响应时执行该括号内的代码，res 为响应信息，也就是后端返回的信息\n            if (res.data.code === '0') {  // 当响应的编码为 0 时，说明注册成功\n              // 显示后端响应的成功信息\n              this.$message({\n                message: res.data.msg,\n                type: \"success\",\n              });\n            }else{  // 当响应的编码不为 0 时，说明注册失败\n              // 显示后端响应的失败信息\n              this.$message({\n                message: res.data.msg,\n                type: \"warning\",\n              });\n            }\n            // 不管响应成功还是失败，收到后端响应的消息后就不再让登录按钮显示加载动画了\n            _this.loading = false;\n            console.log(res);\n          });\n        } else { // 如果账号或密码有一个没填，就直接提示必填，不向后端请求\n          console.log(\"error submit!!\");\n          this.loading = false;\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    goBack() {\n      this.$router.go(-1);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 设置登录面板居中，宽度为400px */\n.box-card {\n  margin: auto auto;\n  width: 400px;\n}\n/* 设置登录面板中的表单居中 */\n.login-from {\n  margin: auto auto;\n}\n</style>"],"sourceRoot":"src/views/register"}]}